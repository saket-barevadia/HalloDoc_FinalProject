@model DataLayer.CustomModels.Recordscm;


<div class="container mt-4">
    <div class="d-flex justify-content-between">

        <input type="search" class="form-control shadow-none" style="width:20%" id="my-search-input" placeholder="Search" aria-label="Search">

        <button class="btn text-light shadow-none" style="background-color:#486b8d;" onclick="addBook()">ADD BOOK</button>
          

        
    </div>



    <div class="table-responsive container-fluid mt-5" id="tableParentDiv">
        <table class="table recordsTable">
            <thead>
                <tr>
                    <th scope="col">Book ID</th>
                    <th scope="col">Book Name</th>
                    <th scope="col">Author</th>
                    <th scope="col">Borrower Name</th>
                    <th scope="col">Date of Issue</th>
                    <th scope="col">City</th>
                    <th scope="col">Genere</th>
                    <th scope="col">Action</th>
                   
                </tr>
            </thead>
            <tbody class="table">
               


                 @foreach(var item in Model.records){

                    <tr>
                           
                        <td class="align-middle">@item.Id</td>
                        <td class="align-middle">@item.BookName</td>
                        <td class="align-middle">@item.Author</td>
                        <td class="align-middle">@item.BorrowerName</td>
                        <td class="align-middle">@item.DateOfIssue</td>
                        <td class="align-middle">@item.City</td>
                        <td class="align-middle">@item.Genre</td>
                        <td class="align-middle">
                            <button class="btn text-white shadow-none" style="background-color:#486b8d;" onclick="editBook(@item.BorrowerId)">Edit</button>
                            <button class="btn text-white shadow-none" style="background-color:black" onclick="deleteRecord(@item.BorrowerId)">Delete</button>
                            </td>
                           
                           
                            
                        </tr>
                   
                        }

            </tbody>
        </table>
       
    </div>
     

    <div id="Modal">

    </div>
 
</div>



<script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js" defer></script>
<script src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js" defer></script>




<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.js" defer></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.js" defer></script>

<script>

    $(document).ready(function () {

        $('.recordsTable').DataTable({
            "initComplete": function (settings, json) {

                $('#my-search-input').val(settings.oPreviousSearch.sSearch);

                $('#my-search-input').on('keyup', function () {
                    var searchValue = $(this).val();
                    settings.oPreviousSearch.sSearch = searchValue;
                    settings.oApi._fnReDraw(settings);
                });
            },
            "lengthMenu": [[ 10, -1], [ 10, "All"]],
            "pageLength": 10,
            "order": [[0, "asc"]],

            language: {
                oPaginate: {
                    sNext: '<i class="fa-solid fa-forward"></i>',
                    sPrevious: '<i class="fa-solid fa-backward"></i>'

                }
            }
        });
       
        $('.dataTables_filter').hide();
    });

    document.getElementById('my-search-input').addEventListener('keydown', function (event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            this.blur();
        }
    });


    function addBook() {
        $.ajax({
            method: "Get",
            url: "/Home/AddBookShared",
            success: function (result) 
            {
                $('#Modal').html(result);
                $('#AddBookModal').modal('show');
            },
            error: function () 
            {
                alert("error");
            },
        });
    }

    function editBook(id) {
        $.ajax({
            method: "Get",
            url: "/Home/AddBookShared",
            data: { borrowerId : id},
            success: function (result) 
            {
                $('#Modal').html(result);
                $('#AddBookModal').modal('show');
            },
            error: function () 
            {
                alert("error");
            },
        });
    }


    function saveInfo() {
        event.preventDefault();

        if ($('#AddBookForm').valid()) {
            $.ajax({
                method: "POST",
                url: "/Home/BookFormPost",
                data: $('#AddBookForm').serialize(),
                success: function (result) {
                   
                    if (result) 
                    {
                        Swal.fire({
                            title: "Book Form",
                            text: "Book Form Saved Successfully!",
                            icon: "success",
                        });
                        $('#AddBookModal').modal('hide');
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else 
                    {
                        Swal.fire({
                            title: "Book Form",
                            text: "Error Occured!",
                            icon: "error",
                        });
                    }
                },

                error: function () 
                {
                    Swal.fire("Oops!", "Something is Wrong !!!", "error");
                }
            })
        }
    }


    function deleteRecord(id){
        $.ajax({
            method: "POST",
            url: "/Home/DeleteRecord",
            data: { borrowerId: id },
            success: function (result) {
                if (result) {
                    Swal.fire({
                        title: "Book Record",
                        text: "Book Record Deleted Successfully!",
                        icon: "success",
                    });
                    setTimeout(function () { location.reload(); }, 1000);
                }
                else {
                    Swal.fire({
                        title: "Book Record",
                        text: "Error Occured!",
                        icon: "error",
                    });
                }
            },

            error: function () {
                Swal.fire("Oops!", "Something is Wrong !!!", "error");
            }
        });
    }

    

</script>